spring.application.name=team

# empecher les erreurs de troncature de donnees par MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/cytrainv4b?sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false
spring.datasource.username=root
spring.datasource.password=
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# empecher les erreurs de synchronisation des nommages des champs des entites ou leurs champs entre jdbc et la bdd
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy -> utiliser si echec des 2 au-dessus

# 'create' supprimera les tables
# 'update' non mais est necessaire pour les requetes api qui modifient les tables
spring.jpa.hibernate.ddl-auto=update

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# historique des requetes sql
spring.jpa.show-sql = true

# Definit le contexte de l'api client avec son nom (apparait apres 'http://localhost:app-port')
server.servlet.context-path=/api